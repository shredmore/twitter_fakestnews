<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0615.2100                               -->
<workbook original-version='10.3' source-build='10.3.1 (10300.17.0615.2100)' source-platform='mac' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='hashtag_by_day_2017-08-08' inline='true' name='federated.1soit2t1n4i82a1803kow1aaz0fg' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hashtag_by_day_2017-08-08' name='textscan.1o2dm9a1in0bof1fuvtdt1joq25q'>
            <connection class='textscan' directory='/Users/benthompson/Google Drive/MIDS/205/group_project/twitter_fakestnews/bens_code/output_data' filename='hashtag_by_day_2017-08-08.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1o2dm9a1in0bof1fuvtdt1joq25q' name='hashtag_by_day_2017-08-08.tsv' table='[hashtag_by_day_2017-08-08#tsv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator='&#9;'>
            <column datatype='date' date-parse-format='MMM dd yyyy' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hashtag_by_day_2017-08-08.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>7</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[hashtag_by_day_2017-08-08.tsv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[hashtag_by_day_2017-08-08.tsv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[hashtag_by_day_2017-08-08.tsv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Hashtag' datatype='string' name='[F2]' role='dimension' type='nominal' />
      <column caption='Counts of Hashtags' datatype='integer' name='[F3]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/benthompson/Documents/My Tableau Repository/Datasources/hashtag_by_day_2017-08-08.tde' schema='Extract' tablename='Extract' update-time='08/09/2017 01:01:11 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='7355' timestamp-start='2017-08-09 01:01:11.138' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>hashtag_by_day_2017-08-08.tsv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2017-08-02#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-08-09#</statistic>
                <statistic aggregation='Count' datatype='integer'>7355</statistic>
                <statistic aggregation='Median' datatype='date'>#2017-08-05#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F2</remote-alias>
              <ordinal>1</ordinal>
              <family>hashtag_by_day_2017-08-08.tsv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4795</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;100k&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;辛淑玉&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>7355</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F3</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F3</remote-alias>
              <ordinal>2</ordinal>
              <family>hashtag_by_day_2017-08-08.tsv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>124</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>50402.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6.8527532290958533</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2843</statistic>
                <statistic aggregation='Stdev' datatype='real'>82.376032021357886</statistic>
                <statistic aggregation='StdevP' datatype='real'>82.370431828821324</statistic>
                <statistic aggregation='Var' datatype='real'>6785.810651583779</statistic>
                <statistic aggregation='VarP' datatype='real'>6784.8880396665008</statistic>
                <statistic aggregation='Count' datatype='integer'>7355</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>50248244.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7355.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>7355</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7355.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.500861' measure-ordering='alphabetic' measure-percentage='0.499139' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F2:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;CNN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fakenews&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lies&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FakeNews&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;IStandWithEricBolling&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;NRA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MAGA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trump&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TrumpRussia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fakenews&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;FireHannity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DNC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FAKENEWS&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;MSM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='hashtags by day'>
      <table>
        <view>
          <datasources>
            <datasource caption='hashtag_by_day_2017-08-08' name='federated.1soit2t1n4i82a1803kow1aaz0fg' />
          </datasources>
          <datasource-dependencies datasource='federated.1soit2t1n4i82a1803kow1aaz0fg'>
            <column datatype='date' name='[F1]' role='dimension' type='ordinal' />
            <column caption='Hashtag' datatype='string' name='[F2]' role='dimension' type='nominal' />
            <column caption='Counts of Hashtags' datatype='integer' name='[F3]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[F3]' derivation='Sum' name='[sum:F3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='Day-Trunc' name='[tdy:F1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1soit2t1n4i82a1803kow1aaz0fg].[none:F1:qk]' included-values='in-range'>
            <min>#2017-08-03#</min>
            <max>#2017-08-08#</max>
          </filter>
          <filter class='categorical' column='[federated.1soit2t1n4i82a1803kow1aaz0fg].[none:F2:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([F3])' function='order' user:ui-marker='order'>
                <groupfilter expression='ISNULL([F2]) OR (NOT(CONTAINS(LOWER([F2]), LOWER(&apos;fakenews&apos;))))' function='filter' user:ui-enumeration='exclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='fakenews' user:ui-pattern_type='contains'>
                  <groupfilter function='level-members' level='[none:F2:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1soit2t1n4i82a1803kow1aaz0fg].[none:F2:nk]' direction='DESC' using='[federated.1soit2t1n4i82a1803kow1aaz0fg].[sum:F3:qk]' />
          <slices>
            <column>[federated.1soit2t1n4i82a1803kow1aaz0fg].[none:F1:qk]</column>
            <column>[federated.1soit2t1n4i82a1803kow1aaz0fg].[none:F2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1soit2t1n4i82a1803kow1aaz0fg].[tdy:F1:qk]' scope='cols' value='Day' />
            <format attr='subtitle' class='0' field='[federated.1soit2t1n4i82a1803kow1aaz0fg].[tdy:F1:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1soit2t1n4i82a1803kow1aaz0fg].[tdy:F1:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1soit2t1n4i82a1803kow1aaz0fg].[none:F2:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1soit2t1n4i82a1803kow1aaz0fg].[sum:F3:qk]</rows>
        <cols>[federated.1soit2t1n4i82a1803kow1aaz0fg].[tdy:F1:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='hashtags by day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='77'>
            <card pane-specification-id='0' param='[federated.1soit2t1n4i82a1803kow1aaz0fg].[none:F2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1soit2t1n4i82a1803kow1aaz0fg].[none:F1:qk]</field>
            <field>[federated.1soit2t1n4i82a1803kow1aaz0fg].[none:F2:nk]</field>
            <field>[federated.1soit2t1n4i82a1803kow1aaz0fg].[yr:F1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='hashtags by day' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
